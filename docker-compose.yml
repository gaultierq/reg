
version: "3.7"
 
services:

  postgres:
    image: postgres:13.1
    environment:
      POSTGRES_PASSWORD: notneeded
      POSTGRES_USER: delir_user 
      #POSTGRES_DB: web
    ports: 
      - '5432:5432'
    volumes:
      - delir_postgres1:/var/lib/postgresql/data

  redis:
    image: redis:5.0.7
    ports:
      - '6379:6379'
    volumes:
      - delir_redis:/var/lib/redis/data

  web:
    build:
      context: .
      args:
        USER_ID: "${USER_ID:-1000}"
        GROUP_ID: "${GROUP_ID:-1000}"
    depends_on:
      - postgres
      - redis
      #- webpacker
    links:
      - postgres:db
    volumes:
      - type: bind
        source: .
        target: /usr/src/app
    volumes_from:
      - box
    ports:
      - '8010:3000'
    entrypoint: /usr/src/app/bin/start
    env_file:
      - .env
    # Keeps the stdin open, so we can attach to our app container's process and
    # do stuff such as `byebug` or `binding.pry`:
    stdin_open: true
    # Allows us to send signals (CTRL+C, CTRL+P + CTRL+Q) into the container:
    tty: true
    environment:
      RAILS_ENV: development
      # Notice that this is the DB we'll use:
      DATABASE_URL: postgres://delir_user:notneeded@db:5432/web
      # We'll use this env variable to make the log output gets directed
      # to Docker:
      RAILS_LOG_TO_STDOUT: "true"
      # we do not need to alter the webpack.config file 
      WEBPACKER_DEV_SERVER_HOST: webpacker
      #BUNDLE_JOBS: 15
      #BUNDLE_RETRY: 3
      #BUNDLE_PATH: /bundle/vendor
  #webpacker:
    #build:
      #context: .
      #args:
        #USER_ID: "${USER_ID:-1000}"
        #GROUP_ID: "${GROUP_ID:-1000}"
    #command: ["./bin/webpack-dev-server"]
    #volumes:
      #- type: bind
        #source: .
        #target: /usr/src/app
    #ports:
      #- 3035:3035
    #environment:
      #- WEBPACKER_DEV_SERVER_HOST=0.0.0.0
  #sidekiq:
    #build:
      #context: .
      #args:
        #USER_ID: "${USER_ID:-1000}"
        #GROUP_ID: "${GROUP_ID:-1000}"
    #command: bundle exec sidekiq 
    #depends_on:
      #- postgres
      #- redis
    #volumes:
      #- type: bind
        #source: .
        #target: /usr/src/app
  # used to cache gems 
  box:
    image: busybox
    volumes:
      - /box 
  #livereload:
    #build:
      #context: .
      #args:
        #USER_ID: "${USER_ID:-1000}"
        #GROUP_ID: "${GROUP_ID:-1000}"
    #command: guard -i -P livereload
    #ports:
      #- 35729:35729
    #volumes:
      #- .:/usr/src/app  # or however you configured your Rails root volume
volumes:
  delir_postgres1:
  delir_redis:
  bundle_path:
